                     Automated Testing Framework (atf)
                        The NetBSD Foundation, Inc.
---------------------------------------------------------------------------


Hacking notes
=============

This document contains multiple items that should be taken into account
when contributing to this project.


The repository
==============

The project's code is managed with the Monotone version control system.
This gives you, a potential contributor, a lot of freedom in how to
manage the code and your changes on top of it.

Please read http://www.venge.net/mtn-wiki/BestPractices for multiple tips
on how to best use monotone.  Of special importance is the daggy fixes
work-flow pattern: http://www.venge.net/mtn-wiki/DaggyFixes.

As regards commit messages, we use a "mail-style" formatting approach.
Your message must be composed of a single-line subject sentence that
summarizes the whole change, and later be described in detail in
subsequent paragraphs.  This is so that visualization tools such as
ViewMTN can show useful summary lines for changes.  It also forces you
to verify your changes more carefully before committing them.


Licensing
=========

All your changes must be under the same terms of the BSD license that
covers the project; see the COPYING file for more details.

Additionally, you must transfer the copyright of your work to The NetBSD
Foundation, Inc.  This is required for two reasons:

* Transferring the copyright ensures that all the code is under the
  same license terms.  This lessens the trouble caused by the
  "advertising" clause in the BSD license used by the project, as ads
  mentioning it will only have to include a single copyright notice.
  It also makes describing the license to other people a lot easier.

* Should we ever want to relicense the project under a 3-clause BSD
  license (as planned), the trouble to do it will be minimal because
  we will not have to contact many authors to ask for permission for
  the change.


Coding style
============

Be consistent with the style of the file you are modifying.  If you have
any doubt as to how you should format a specific construction, look for a
similar one in that or other files and mimic its style.

Run 'make check-style' after changes to do some basic sanity-checks on the
coding style.  Note that it is not possible to create a distribution file
(aka 'make dist') unless these check pass.

Clearly inconsistent changes will be banned from integration unless fixed.

At last, some very important rules:

* Indentation is 4 spaces.

* Tabs are forbidden.  Everywhere.  (Oh, well, except for Makefile targets,
  but in that case only the first character on every line can be a tab.)

* No trailing whitespace.

If any of these rules are not followed, the offending code will be changed
without notice to fulfill them.  This will possibly cause merge problems to
users who may have branched the code, so please be kind and follow the
rules.


---------------------------------------------------------------------------
                              End of document
